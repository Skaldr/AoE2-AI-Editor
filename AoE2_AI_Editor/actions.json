{"do-nothing": "do-nothing\nThis action does nothing at all. It is primarily used as a stub for testing purposes. Note that every rule needs at least one action.", "acknowledge-event": "acknowledge-event  <event-type> <event-id>\nThis action acknowledges a received event by resetting the associated flag.", "acknowledge-taunt": "acknowledge-taunt  <player-number> <taunt-id>\nThis action acknowledges the taunt (resets the flag). Like other event systems in the AI, taunt detection requests explicit acknowledgement.The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>. It also allows the use of rule variables for the <player-number>.", "attack-now": "attack-now\nThis action forces attack with currently available attack units.  Units are designated as attack units by using sn-percent-attack-soldiers or sn-percent-attack-boats.", "build": "build  <building>\nThis action builds the given building.The action allows the use of building line wildcard parameters for the <building>.", "build-forward": "build-forward  <building>\nThis action builds given building close to enemy.The action allows the use of building line wildcard parameters for the <building>.", "build-gate": "build-gate  <perimeter>\nThis action builds a gate as part of the given perimeter wall.", "build-wall": "build-wall  <perimeter> <wall-type>\nThis action builds a wall line of the given wall type at the given perimeter. The action allows the use of wall line wildcard parameters for the <wall-type>.", "buy-commodity": "buy-commodity  <commodity>\nThis action buys one lot of the given commodity.", "cc-add-resource": "cc-add-resource <resource-type> <amount>\nThis is a cheating action that adds the given resource amount to the computer player.It is to be used in scenarios to avoid late game oddities such as computer player villagers going all over the map while looking for the last pile of gold.", "chat-local": "chat-local <string>\nThis action displays the given string as a local chat message.", "chat-local-using-id": "chat-local-using-id <string-id>\nThis action displays a string, defined by a string id, as a local chat message. ", "chat-local-using-range": "chat-local-using-range <string-id-start> <string-id-range>\nThis action displays a random string as a local chat message. The random string is defined by a string id randomly picked out of a given string id range. ", "chat-local-to-self": "chat-local-to-self <string>\nThis action displays a given string as local chat message. The message is displayed only if the user is the same player as the computer player sending the message. For debugging purposes only.", "chat-to-all": "chat-to-all <string>\nThis action sends a given string as a chat message to all players. ", "chat-to-all-using-id": "chat-to-all-using-id <string-id>\nThis action sends a string, defined by a string id, as a chat message to all players.", "chat-to-all-using-range": "chat-to-all-using-range <string-id-start> <string-id-range>\nThis action sends a random string as chat message to all players. The random string is defined by a string id randomly picked out of a given string id range. Example:(chat-to-all-using-range 5020 5)will send a random localized message with a string id between 5020 and 5024.", "chat-to-allies": "chat-to-allies <string>\nThis action sends a given string as a chat message to allies.", "chat-to-allies-using-id": "chat-to-allies-using-id <string-id>\nThis action sends a string, defined by a string id, as a chat message to allied players.", "chat-to-allies-using-range": "chat-to-allies-using-range <string-id-start> <string-id-range>\nThis action sends a random string as a chat message to allied players. The random string is defined by a string id randomly picked out of a given string id range.", "chat-to-enemies": "chat-to-enemies <string>\nThis action sends a given string as a chat message to enemies and neutral players.", "chat-to-enemies-using-id": "chat-to-enemies-using-id <string-id>\nThis action sends a string, defined by a string id, as a chat message to enemies and neutral players.", "chat-to-enemies-using-range": "chat-to-enemies-using-range <string-id-start> <string-id-range>\nThis action sends a random string as a chat message to enemies and neutral players. The random string is defined by a string id randomly picked out of a given string id range.", "chat-to-player": "chat-to-player <player-number> <string>\nThis action sends a given string as a chat message to a given player.The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>. It also allows the use of rule variables for the <player-number>.", "chat-to-player-using-id": "chat-to-player-using-id <player-number> <string-id>\nThis action sends a string, defined by a string id, as a chat message to a given player.The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>. It also allows the use of rule variables for the <player-number>.", "chat-to-player-using-range": "chat-to-player-using-range <player-number> <string-id-start> <string-id-range>\nThis action sends a random string as a chat message to enemies and neutral players. The random string is defined by a string id randomly picked out of a given string id range.The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>. It also allows the use of rule variables for the <player-number>.", "chat-trace": "chat-trace  <value>\nThis action displays the given value as a chat message. Used purely for testing to check when a rule gets executed.", "clear-tribute-memory": "clear-tribute-memory  <player-number> <resource-type>\nThis action clears the given player's tribute memory. Only tribute memory for the given resource type is cleared.The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>.It also allows the use of rule variables for the <player-number>.", "delete-building": "delete-building  <building>\nThis action deletes exactly one building of a given type.", "delete-unit": "delete-unit  <unit>\nThis action deletes exactly one unit of a given type.", "disable-self": "disable-self\nThis action disables the rule that it is part of. Since disabling takes effect in the next execution pass, other actions in the same rule are still executed one last time.Example: (defrule   (game-time greater-than 30)    =>   (disable-self) )", "disable-timer": "disable-timer  <timer-id>\nThis action disables the given timer.", "enable-timer": "enable-timer  <timer-id>\nThis action enables the given timer and sets it to the given time interval.", "enable-wall-placement": "enable-wall-placement  <perimeter>\nThis action enables wall placement for the given perimeter. Enabled wall placement causes the rest of the placement code to do some planning and place all structures at least one tile away from the future wall lines.If you are planning to build a wall, you have to explicitly define which perimeter wall you plan to use when the game starts. This is a one-time action and should be used during the initial setup.Example:(defrule  (enable-wall-placement 2)   =>  (disable-self))", "generate-random-number": "generate-random-number <value>\nThis action generates a player-specific integer random number within given range (1 to <value>). The number is stored and its value can be tested. Subsequent executions of this action generate new random numbers that replace existing ones. Example:; For readability reasons define the constants(defconst feudal-age-rush 1)(defconst castle-age-rush 2); First roll the dice. This will generate number between 1 and 100 inclusive(defrule    (true)   =>   (generate-random-number 100)   (disable-self)); Based on the outcome we pick the strategy:; 20% chance of feudal age rush ; 80% chance of castle age rush(defrule   (random-number > 80)   =>   (set-goal 1 feudal-age-rush)   (disable-self))(defrule   (random-number < 81)   =>   (set-goal 1 castle-age-rush)   (disable-self))", "log": "log <string>\nThis action writes the given string to a log file. Used purely for testing purposes. Works only if logging is enabled.", "log-trace": "log-trace  <value>\nThis action writes the given value to a log file. Used purely for testing to check when a rule gets executed. Works only if logging is enabled.", "release-escrow": "release-escrow  <resource-type>\nThis action releases the computer player's escrow for a given resource type.", "research": "research  <age>\nThis action researches the next age.", "resign": "resign\nThis action causes the computer player to resign.(defrule   (game-time equal 6000)     =>   (resign)   )", "sell-commodity": "sell-commodity  <commodity>\nThis action sells one lot of a given commodity.", "set-difficulty-parameter": "set-difficulty-parameter <difficulty-parameter> <value>\nThis action sets a given difficulty parameter to a given value.", "set-doctrine": "set-doctrine <value>\nThis action sets the doctrine to the given value.", "set-escrow-percentage": "set-escrow-percentage  <resource-type>  <value>\nThis action sets the computer player's escrow percentage for a given resource type.Given values have to be in the range 0-100.", "set-goal": "set-goal <goal-id> <value>\nThis action sets a given goal to a given value.", "set-shared-goal": "set-shared-goal <shared-goal-id> <value>\nThis action sets a given shared goal (a goal that is shared among computer players) to a given value. To be used only when all computer players are on the same team.", "set-signal": "set-signal <signal-id>\nThis action sets a given signal that can be checked by the trigger system.", "set-stance": "set-stance <player-number> <diplomatic-stance>\nThis action sets the stance toward a given player.The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>.It also allows the use of rule variables for the <player-number>.", "set-strategic-number": "set-strategic-number <strategic-number>  <value>\nThis action sets a given strategic number to a given value.See Appendix A for information on strategic numbers.", "spy": "spy\nThis action executes a spy command.", "taunt": "taunt  <value>\nThis action triggers the taunt associated with the given value.(defrule   (game-time equal 6000)     =>  (taunt 10)  (disable-self))", "taunt-using-range": "taunt-using-range  <taunt-start>  <taunt-range>\nThis action triggers a random taunt that is picked from a given taunt range.Example:(taunt-using-range 50 10)will use a random taunt between 50 and 59.", "train": "train <unit>\nThis action trains the given unit. To prevent cheating, this action uses the same criteria as the can-train fact to make sure the unit can be trained.The fact allows the use of unit line wildcard parameters for the <unit>.(defrule  (food-amount greater-than 100)     =>  (train villager)  (train swordsman))", "tribute-to-player": "tribute-to-player <player-number>  <resource-type>  <value>\nThis action tributes the given amount of the given resource type to the player defined by the player-number parameter. Implementation specifics:If the computer player does not have a Market no tribute is given. In the case when the value parameter specifies an amount larger than available, only the available resources of the given type are tributed. If, for example, there is only 60 food and the tribute action specifies 100 food, only 60 food will be tributed. The tribute action is ignored when there are no resources of the given type.Tribute fees are paid and deducted from the tribute amount (if applicable).The action allows \u201cany\u201d/\u201devery\u201d wildcard parameters for the <player-number>.It also allows the use of rule variables for the <player-number>.", "up-jump-rule": "up-jump-rule <value>\nTo be completed.", "up-get-fact": "up-get-fact <?> <?> <?>\nTo be completed.", "up-modify-goal": "up-modify-goal <goal> <op> <value>\nTo be completed.", "up-get-threat-data": "up-get-threat-data <?> <?> <?> <?>\nTo be completed.", "up-get-treaty-data": "up-get-treaty-data <?> <?> <?>\nTo be completed.", "up-assign-builders": "up-assign-builders <?> <building> <?> <value>\nTo be completed.", "up-modify-sn": "up-modify-sn <sn-number> <?> <value>\nThis action modifies the given sn-number to the given value.", "up-find-player": "up-find-player <?> <?> <?>\nTo be completed.", "up-get-fact-max": "up-get-fact-max <?> <?> <?> <?>\nTo be completed.", "up-get-target-fact": "up-get-target-fact <?> <?> <?> <?>\nTo be completed.", "up-chat-data-to-self": "up-chat-data-to-self <?> <?> <?>\nTo be completed.", "up-send-scout": "up-send-scout <?> <?>\nTo be completed.", "up-request-hunters": "up-request-hunters <?> <?>\nTo be completed.", "up-drop-resources": "up-drop-resources <?> <?>\nTo be completed.", "up-set-placement-data": "up-set-placement-data <?> <?> <?> <?>\nTo be completed.", "up-build": "up-build <?> <?> <?> <?>\nTo be completed.", "up-reset-unit": "up-reset-unit <?> <?>\nTo be completed.", "up-retreat-now": "up-retreat-now\nTo be completed.", "up-chat-data-to-player": "up-chat-data-to-player <?> <?> <?> <?>\nTo be completed.", "up-chat-data-to-all": "up-chat-data-to-all <?> <?> <?>\nTo be completed.", "up-get-victory-data": "up-get-victory-data <?> <?> <?>\nTo be completed.", "up-get-fact-sum": "up-get-fact-sum <?> <?> <?> <?>\nTo be completed."}